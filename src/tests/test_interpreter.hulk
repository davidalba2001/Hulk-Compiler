
type Point(x,y) {
    x = x;
    y = y;

    getX() => self.x;
    getY() => self.y;
    
    setX(a) => self.x := a;
    setY(a) => self.y := a;
}
type PolarPoint(phi, rho) inherits Point(rho * sin(phi), rho * cos(phi)) {
    rho() => sqrt(self.getX() ^ 2 + self.getY() ^ 2);
}
function suma(a, b){
    a + b;
}

type Pointer(x){
    x: Point = x;
}

{
    let a =  new Point(1, 1) in {
        print(a.x);
        print(a.y);
        a := new PolarPoint(0, 1);
        print(a.x);
        print(a.y);
    };
};


